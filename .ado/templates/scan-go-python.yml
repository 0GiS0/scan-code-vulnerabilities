parameters:
  - name: PYTHON_SONARQUBE_TOKEN # name of the parameter; required
    type: string # data type of the parameter; required
  - name: SONARQUBE_URL # name of the parameter; required
    type: string # data type of the parameter; required
  - name: SNYK_TOKEN # name of the parameter; required
    type: string # data type of the parameter; required
  - name: SL_TOKEN # name of the parameter; required
    type: string # data type of the parameter; required
  - name: working_directory
    type: string    
  - name: repo
    type: string    
  - name: path
    type: string
  - name: app_name
    type: string    

jobs:
  - job: SonarQubeForPython
    steps:
      - task: CmdLine@2
        displayName: "Checkout a public GH repo"
        inputs:
          script: |
            git clone ${{ parameters.repo }}                    

      - task: CmdLine@2
        displayName: "Install SonarQube scanner" 
        inputs:
          script: |          
            SONAR_DIR=/opt/sonarscanner          
            mkdir -p $SONAR_DIR && cd $SONAR_DIR
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
            unzip sonar-scanner-cli-5.0.1.3006-linux.zip 
            rm sonar-scanner-cli-5.0.1.3006-linux.zip
            chmod +x sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner 
            ln -s $SONAR_DIR/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner /usr/local/bin/sonar-scanner
 
      - task: CmdLine@2
        displayName: "Build and analyze"
        inputs:
          script: |
            cd ${{ parameters.working_directory }}
            sonar-scanner \
            -Dsonar.projectKey=${{ parameters.app_name }} \           
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ parameters.SONARQUBE_URL }} \
            -Dsonar.login=${{ parameters.PYTHON_SONARQUBE_TOKEN }}

  - job: SnykForPython
    steps:
      - task: CmdLine@2
        displayName: "Checkout a public GH repo"
        inputs:
          script: |
            git clone ${{ parameters.repo }}
      - task: CmdLine@2
        displayName: "Install Snyk CLI"
        inputs:
          script: |
            curl --compressed https://static.snyk.io/cli/latest/snyk-linux -o snyk
            chmod +x ./snyk
            mv ./snyk /usr/local/bin/
      - task: CmdLine@2
        displayName: "Scan Python code"
        inputs:
          script: |
            cd ${{ parameters.working_directory }}            
            snyk code test --sarif || true
            snyk code test --sarif > $(Build.ArtifactStagingDirectory)/snyk-code.sarif || true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)/snyk-code.sarif"
          ArtifactName: "CodeAnalysisLogs"
          publishLocation: "Container"
  
  - job: SASTScanForPython
    variables:
      SHIFTLEFT_ACCESS_TOKEN: ${{ parameters.SL_TOKEN }}
    steps:
      - task: CmdLine@2
        displayName: "Checkout a public GH repo"
        inputs:
          script: |
            git clone ${{ parameters.repo }}
      - task: CmdLine@2
        displayName: "Install sast-scan CLI"
        inputs:
          script: |
            curl https://cdn.shiftleft.io/download/sl >/usr/local/bin/sl && chmod a+rx /usr/local/bin/sl
      - task: CmdLine@2
        displayName: "Scan Python code"
        inputs:
          script: |
            cd ${{ parameters.working_directory }}
            go build
            sl analyze --app ${{ parameters.app_name }} --go --wait
