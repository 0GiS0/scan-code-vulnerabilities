name: Scan .NET Code

on:
  workflow_call:
    secrets:
      SL_TOKEN:
        required: true      
      SNYK_TOKEN:
        required: true
      DOTNET_SONARQUBE_TOKEN:
        required: true
      SONARQUBE_CODESPACES_URL:
        required: true
    inputs:
      app-name:
        description: 'The name of the application to scan'
        type: string
        required: true
      repo:
        description: 'The repository to scan'
        type: string
        required: true
      path:
        description: 'The path to the repository to scan'
        type: string
        required: false
        default: 'shiftleft-csharp-demo'
      working-directory:
        description: 'The working directory to scan'
        type: string
        required: false
        default: 'manifests'

jobs:
  sonarqube:
    name: Sonarqube
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          path: ${{ inputs.path }}
      - name: Install SonarQube scanner        
        shell: powershell
        run: |          
          dotnet tool install --global dotnet-sonarscanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: powershell
        run: |
          cd ${{ inputs.working-directory }}
          dotnet sonarscanner begin /k:"${{ inputs.app-name }}" /d:sonar.host.url="${{ secrets.SONARQUBE_CODESPACES_URL }}" /d:sonar.login="${{ secrets.DOTNET_SONARQUBE_TOKEN }}"     
          dotnet build
          dotnet sonarscanner end /d:sonar.login="${{ secrets.DOTNET_SONARQUBE_TOKEN }}"
  snyk:
    name: Snyk
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    permissions:
      contents: read
      security-events: write      
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          path: ${{ inputs.path }}
      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
              
      - name: Snyk Code test and report
        continue-on-error: true       
        run: |
            cd ${{ inputs.working-directory }}
            dotnet build
            snyk code test --sarif || true
            snyk code test --sarif  > snyk-code.sarif

      # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ inputs.working-directory }}/snyk-code.sarif  

  sast-scan:
    name: Sast-scan
    runs-on: ubuntu-latest
    env:
      SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SL_TOKEN }}
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:        
          repository: ${{ inputs.repo }}
          path: ${{ inputs.path }}
      - name: Install sast-scan
        run: |
          curl https://cdn.shiftleft.io/download/sl >/usr/local/bin/sl && chmod a+rx /usr/local/bin/sl
      - name: Perform Scan
        run: |
          cd ${{ inputs.working-directory }}
          dotnet build
          sl analyze --app ${{ inputs.app-name }} --csharp --wait netcoreWebapi.csproj
        env:
          SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SL_TOKEN }}